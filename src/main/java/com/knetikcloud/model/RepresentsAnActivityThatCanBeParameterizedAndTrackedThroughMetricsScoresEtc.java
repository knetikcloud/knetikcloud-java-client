/*
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.knetikcloud.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.knetikcloud.model.ActivityEntitlementResource;
import com.knetikcloud.model.Property;
import com.knetikcloud.model.RewardSetResource;
import com.knetikcloud.model.TheDefinitionOfAnActivityParametersExDifficultyLevel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-06-21T15:38:48.994-04:00")
public class RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc {
  @JsonProperty("additional_properties")
  private Map<String, Property> additionalProperties = new HashMap<String, Property>();

  @JsonProperty("created_date")
  private Long createdDate = null;

  @JsonProperty("entitlements")
  private List<ActivityEntitlementResource> entitlements = new ArrayList<ActivityEntitlementResource>();

  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("launch")
  private String launch = null;

  @JsonProperty("long_description")
  private String longDescription = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("reward_set")
  private RewardSetResource rewardSet = null;

  @JsonProperty("settings")
  private List<TheDefinitionOfAnActivityParametersExDifficultyLevel> settings = new ArrayList<TheDefinitionOfAnActivityParametersExDifficultyLevel>();

  @JsonProperty("short_description")
  private String shortDescription = null;

  @JsonProperty("template")
  private Boolean template = null;

  @JsonProperty("template_id")
  private String templateId = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("unique_key")
  private String uniqueKey = null;

  @JsonProperty("updated_date")
  private Long updatedDate = null;

  public RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc additionalProperties(Map<String, Property> additionalProperties) {
    this.additionalProperties = additionalProperties;
    return this;
  }

  public RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc putAdditionalPropertiesItem(String key, Property additionalPropertiesItem) {
    this.additionalProperties.put(key, additionalPropertiesItem);
    return this;
  }

   /**
   * A map of additional properties keyed on the property name. Used to further describe an activity. While settings will vary from one activity occurrence (a game) to another, additional properties are shared by all the occurrences of this activity. Ex: Activity Logo, Disclaimer, Greeting, etc. Validated against template if one exists for activities
   * @return additionalProperties
  **/
  @ApiModelProperty(example = "null", value = "A map of additional properties keyed on the property name. Used to further describe an activity. While settings will vary from one activity occurrence (a game) to another, additional properties are shared by all the occurrences of this activity. Ex: Activity Logo, Disclaimer, Greeting, etc. Validated against template if one exists for activities")
  public Map<String, Property> getAdditionalProperties() {
    return additionalProperties;
  }

  public void setAdditionalProperties(Map<String, Property> additionalProperties) {
    this.additionalProperties = additionalProperties;
  }

   /**
   * The date/time this resource was created in seconds since unix epoch
   * @return createdDate
  **/
  @ApiModelProperty(example = "null", value = "The date/time this resource was created in seconds since unix epoch")
  public Long getCreatedDate() {
    return createdDate;
  }

  public RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc entitlements(List<ActivityEntitlementResource> entitlements) {
    this.entitlements = entitlements;
    return this;
  }

  public RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc addEntitlementsItem(ActivityEntitlementResource entitlementsItem) {
    this.entitlements.add(entitlementsItem);
    return this;
  }

   /**
   * The list of items that can be used for entitlement (wager amounts/etc)
   * @return entitlements
  **/
  @ApiModelProperty(example = "null", value = "The list of items that can be used for entitlement (wager amounts/etc)")
  public List<ActivityEntitlementResource> getEntitlements() {
    return entitlements;
  }

  public void setEntitlements(List<ActivityEntitlementResource> entitlements) {
    this.entitlements = entitlements;
  }

   /**
   * The unique ID for that resource
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "The unique ID for that resource")
  public Long getId() {
    return id;
  }

  public RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc launch(String launch) {
    this.launch = launch;
    return this;
  }

   /**
   * Details about how to launch the activity
   * @return launch
  **/
  @ApiModelProperty(example = "null", value = "Details about how to launch the activity")
  public String getLaunch() {
    return launch;
  }

  public void setLaunch(String launch) {
    this.launch = launch;
  }

  public RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc longDescription(String longDescription) {
    this.longDescription = longDescription;
    return this;
  }

   /**
   * The user friendly name of that resource. Defaults to blank string
   * @return longDescription
  **/
  @ApiModelProperty(example = "null", value = "The user friendly name of that resource. Defaults to blank string")
  public String getLongDescription() {
    return longDescription;
  }

  public void setLongDescription(String longDescription) {
    this.longDescription = longDescription;
  }

  public RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The user friendly name of that resource
   * @return name
  **/
  @ApiModelProperty(example = "null", required = true, value = "The user friendly name of that resource")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc rewardSet(RewardSetResource rewardSet) {
    this.rewardSet = rewardSet;
    return this;
  }

   /**
   * The rewards to give at the end of each occurence of the activity. When creating/updating only id is used. Reward set must be pre-existing
   * @return rewardSet
  **/
  @ApiModelProperty(example = "null", value = "The rewards to give at the end of each occurence of the activity. When creating/updating only id is used. Reward set must be pre-existing")
  public RewardSetResource getRewardSet() {
    return rewardSet;
  }

  public void setRewardSet(RewardSetResource rewardSet) {
    this.rewardSet = rewardSet;
  }

  public RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc settings(List<TheDefinitionOfAnActivityParametersExDifficultyLevel> settings) {
    this.settings = settings;
    return this;
  }

  public RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc addSettingsItem(TheDefinitionOfAnActivityParametersExDifficultyLevel settingsItem) {
    this.settings.add(settingsItem);
    return this;
  }

   /**
   * Define what parameters are required/available to start and run an activity. For example: Difficulty, Number of Questions, Character name, Avatar, Duration, etc. Not populated when getting listing
   * @return settings
  **/
  @ApiModelProperty(example = "null", value = "Define what parameters are required/available to start and run an activity. For example: Difficulty, Number of Questions, Character name, Avatar, Duration, etc. Not populated when getting listing")
  public List<TheDefinitionOfAnActivityParametersExDifficultyLevel> getSettings() {
    return settings;
  }

  public void setSettings(List<TheDefinitionOfAnActivityParametersExDifficultyLevel> settings) {
    this.settings = settings;
  }

  public RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc shortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
    return this;
  }

   /**
   * The user friendly name of that resource. Defaults to blank string
   * @return shortDescription
  **/
  @ApiModelProperty(example = "null", value = "The user friendly name of that resource. Defaults to blank string")
  public String getShortDescription() {
    return shortDescription;
  }

  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }

  public RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc template(Boolean template) {
    this.template = template;
    return this;
  }

   /**
   * Whether this activity is a template for other activities. Default: false
   * @return template
  **/
  @ApiModelProperty(example = "false", value = "Whether this activity is a template for other activities. Default: false")
  public Boolean getTemplate() {
    return template;
  }

  public void setTemplate(Boolean template) {
    this.template = template;
  }

  public RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc templateId(String templateId) {
    this.templateId = templateId;
    return this;
  }

   /**
   * An activity template this activity is validated against (private). May be null and no validation of additional_properties will be done
   * @return templateId
  **/
  @ApiModelProperty(example = "null", value = "An activity template this activity is validated against (private). May be null and no validation of additional_properties will be done")
  public String getTemplateId() {
    return templateId;
  }

  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }

  public RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the activity
   * @return type
  **/
  @ApiModelProperty(example = "null", required = true, value = "The type of the activity")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc uniqueKey(String uniqueKey) {
    this.uniqueKey = uniqueKey;
    return this;
  }

   /**
   * The unique key (for static reference in code) of the activity
   * @return uniqueKey
  **/
  @ApiModelProperty(example = "null", value = "The unique key (for static reference in code) of the activity")
  public String getUniqueKey() {
    return uniqueKey;
  }

  public void setUniqueKey(String uniqueKey) {
    this.uniqueKey = uniqueKey;
  }

   /**
   * The date/time this resource was last updated in seconds since unix epoch
   * @return updatedDate
  **/
  @ApiModelProperty(example = "null", value = "The date/time this resource was last updated in seconds since unix epoch")
  public Long getUpdatedDate() {
    return updatedDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc representsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc = (RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc) o;
    return Objects.equals(this.additionalProperties, representsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc.additionalProperties) &&
        Objects.equals(this.createdDate, representsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc.createdDate) &&
        Objects.equals(this.entitlements, representsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc.entitlements) &&
        Objects.equals(this.id, representsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc.id) &&
        Objects.equals(this.launch, representsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc.launch) &&
        Objects.equals(this.longDescription, representsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc.longDescription) &&
        Objects.equals(this.name, representsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc.name) &&
        Objects.equals(this.rewardSet, representsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc.rewardSet) &&
        Objects.equals(this.settings, representsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc.settings) &&
        Objects.equals(this.shortDescription, representsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc.shortDescription) &&
        Objects.equals(this.template, representsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc.template) &&
        Objects.equals(this.templateId, representsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc.templateId) &&
        Objects.equals(this.type, representsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc.type) &&
        Objects.equals(this.uniqueKey, representsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc.uniqueKey) &&
        Objects.equals(this.updatedDate, representsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc.updatedDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalProperties, createdDate, entitlements, id, launch, longDescription, name, rewardSet, settings, shortDescription, template, templateId, type, uniqueKey, updatedDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RepresentsAnActivityThatCanBeParameterizedAndTrackedThroughMetricsScoresEtc {\n");
    
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    entitlements: ").append(toIndentedString(entitlements)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    launch: ").append(toIndentedString(launch)).append("\n");
    sb.append("    longDescription: ").append(toIndentedString(longDescription)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    rewardSet: ").append(toIndentedString(rewardSet)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uniqueKey: ").append(toIndentedString(uniqueKey)).append("\n");
    sb.append("    updatedDate: ").append(toIndentedString(updatedDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

