/*
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.knetikcloud.api;

import com.knetikcloud.client.ApiException;
import com.knetikcloud.model.ItemTemplateResource;
import com.knetikcloud.model.PageResourceItemTemplateResource;
import com.knetikcloud.model.PatchResource;
import com.knetikcloud.model.Result;
import com.knetikcloud.model.ShippingItem;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StoreShippingApi
 */
@Ignore
public class StoreShippingApiTest {

    private final StoreShippingApi api = new StoreShippingApi();

    
    /**
     * Create a shipping item
     *
     * A shipping item represents a shipping option and cost. SKUs have to be unique in the entire store. &lt;br&gt;&lt;br&gt;&lt;b&gt;Permissions Needed:&lt;/b&gt; SHIPPING_ADMIN
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createShippingItemTest() throws ApiException {
        Boolean cascade = null;
        ShippingItem shippingItem = null;
        ShippingItem response = api.createShippingItem(cascade, shippingItem);

        // TODO: test validations
    }
    
    /**
     * Create a shipping template
     *
     * Shipping Templates define a type of shipping and the properties they have.&lt;br /&gt;&lt;b&gt;Permissions Needed:&lt;/b&gt; POST
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createShippingTemplateTest() throws ApiException {
        ItemTemplateResource shippingTemplateResource = null;
        ItemTemplateResource response = api.createShippingTemplate(shippingTemplateResource);

        // TODO: test validations
    }
    
    /**
     * Delete a shipping item
     *
     * &lt;b&gt;Permissions Needed:&lt;/b&gt; SHIPPING_ADMIN
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteShippingItemTest() throws ApiException {
        Integer id = null;
        api.deleteShippingItem(id);

        // TODO: test validations
    }
    
    /**
     * Delete a shipping template
     *
     * &lt;b&gt;Permissions Needed:&lt;/b&gt; DELETE&lt;br /&gt;&lt;b&gt;Permissions Needed:&lt;/b&gt; DELETE
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteShippingTemplateTest() throws ApiException {
        String id = null;
        String cascade = null;
        api.deleteShippingTemplate(id, cascade);

        // TODO: test validations
    }
    
    /**
     * Get a single shipping item
     *
     * &lt;b&gt;Permissions Needed:&lt;/b&gt; ANY
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getShippingItemTest() throws ApiException {
        Integer id = null;
        ShippingItem response = api.getShippingItem(id);

        // TODO: test validations
    }
    
    /**
     * Get a single shipping template
     *
     * Shipping Templates define a type of shipping and the properties they have. &lt;br&gt;&lt;br&gt;&lt;b&gt;Permissions Needed:&lt;/b&gt; GET&lt;br /&gt;&lt;b&gt;Permissions Needed:&lt;/b&gt; GET
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getShippingTemplateTest() throws ApiException {
        String id = null;
        ItemTemplateResource response = api.getShippingTemplate(id);

        // TODO: test validations
    }
    
    /**
     * List and search shipping templates
     *
     * &lt;b&gt;Permissions Needed:&lt;/b&gt; LIST&lt;br /&gt;&lt;b&gt;Permissions Needed:&lt;/b&gt; LIST
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getShippingTemplatesTest() throws ApiException {
        Integer size = null;
        Integer page = null;
        String order = null;
        PageResourceItemTemplateResource response = api.getShippingTemplates(size, page, order);

        // TODO: test validations
    }
    
    /**
     * Update a shipping item
     *
     * &lt;b&gt;Permissions Needed:&lt;/b&gt; SHIPPING_ADMIN
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateShippingItemTest() throws ApiException {
        Integer id = null;
        Boolean cascade = null;
        ShippingItem shippingItem = null;
        ShippingItem response = api.updateShippingItem(id, cascade, shippingItem);

        // TODO: test validations
    }
    
    /**
     * Update a shipping template
     *
     * &lt;b&gt;Permissions Needed:&lt;/b&gt; PUT&lt;br /&gt;&lt;b&gt;Permissions Needed:&lt;/b&gt; PUT
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateShippingTemplateTest() throws ApiException {
        String id = null;
        PatchResource templatePatchResource = null;
        Boolean testValidation = null;
        ItemTemplateResource response = api.updateShippingTemplate(id, templatePatchResource, testValidation);

        // TODO: test validations
    }
    
}
