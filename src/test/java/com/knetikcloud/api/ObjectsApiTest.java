/*
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.knetikcloud.api;

import com.knetikcloud.client.ApiException;
import com.knetikcloud.model.ItemTemplateResource;
import com.knetikcloud.model.ObjectResource;
import com.knetikcloud.model.PageResourceItemTemplateResource;
import com.knetikcloud.model.PageResourceObjectResource;
import com.knetikcloud.model.Result;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ObjectsApi
 */
@Ignore
public class ObjectsApiTest {

    private final ObjectsApi api = new ObjectsApi();

    
    /**
     * Create an object
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createObjectItemTest() throws ApiException {
        String templateId = null;
        Boolean cascade = null;
        ObjectResource objectItem = null;
        ObjectResource response = api.createObjectItem(templateId, cascade, objectItem);

        // TODO: test validations
    }
    
    /**
     * Create an object template
     *
     * Object templates define a type of entitlement and the properties they have
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createObjectTemplateTest() throws ApiException {
        ItemTemplateResource template = null;
        ItemTemplateResource response = api.createObjectTemplate(template);

        // TODO: test validations
    }
    
    /**
     * Delete an object
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteObjectItemTest() throws ApiException {
        String templateId = null;
        Integer objectId = null;
        api.deleteObjectItem(templateId, objectId);

        // TODO: test validations
    }
    
    /**
     * Delete an entitlement template
     *
     * If cascade &#x3D; &#39;detach&#39;, it will force delete the template even if it&#39;s attached to other objects
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteObjectTemplateTest() throws ApiException {
        String id = null;
        String cascade = null;
        api.deleteObjectTemplate(id, cascade);

        // TODO: test validations
    }
    
    /**
     * Get a single object
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getObjectItemTest() throws ApiException {
        String templateId = null;
        Integer objectId = null;
        ObjectResource response = api.getObjectItem(templateId, objectId);

        // TODO: test validations
    }
    
    /**
     * List and search objects
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getObjectItemsTest() throws ApiException {
        String templateId = null;
        Integer size = null;
        Integer page = null;
        String order = null;
        PageResourceObjectResource response = api.getObjectItems(templateId, size, page, order);

        // TODO: test validations
    }
    
    /**
     * Get a single entitlement template
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getObjectTemplateTest() throws ApiException {
        String id = null;
        ItemTemplateResource response = api.getObjectTemplate(id);

        // TODO: test validations
    }
    
    /**
     * List and search entitlement templates
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getObjectTemplatesTest() throws ApiException {
        Integer size = null;
        Integer page = null;
        String order = null;
        PageResourceItemTemplateResource response = api.getObjectTemplates(size, page, order);

        // TODO: test validations
    }
    
    /**
     * Update an object
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateObjectItemTest() throws ApiException {
        String templateId = null;
        Integer objectId = null;
        Boolean cascade = null;
        ObjectResource objectItem = null;
        api.updateObjectItem(templateId, objectId, cascade, objectItem);

        // TODO: test validations
    }
    
    /**
     * Update an entitlement template
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateObjectTemplateTest() throws ApiException {
        String id = null;
        ItemTemplateResource template = null;
        ItemTemplateResource response = api.updateObjectTemplate(id, template);

        // TODO: test validations
    }
    
}
