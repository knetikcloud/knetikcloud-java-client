/**
 * Knetik Platform API Documentation Latest
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.TemplateResource;
import io.swagger.client.model.CampaignResource;
import io.swagger.client.model.PageResourceTemplateResource;
import io.swagger.client.model.PageResourceCampaignResource;
import io.swagger.client.model.PageResourceChallengeResource;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CampaignsApi
 */
public class CampaignsApiTest {

    private final CampaignsApi api = new CampaignsApi();

    
    /**
     * Add a challenge to a campaign
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addChallengesUsingPOSTTest() throws ApiException {
        Long id = null;
        Long challengeId = null;
        // api.addChallengesUsingPOST(id, challengeId);

        // TODO: test validations
    }
    
    /**
     * Create a campaign template
     *
     * Campaign Templates define a type of campaign and the properties they have
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCampaignTemplateUsingPOSTTest() throws ApiException {
        TemplateResource campaignTemplateResource = null;
        // TemplateResource response = api.createCampaignTemplateUsingPOST(campaignTemplateResource);

        // TODO: test validations
    }
    
    /**
     * Create a campaign
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCampaignUsingPOSTTest() throws ApiException {
        CampaignResource campaignResource = null;
        // CampaignResource response = api.createCampaignUsingPOST(campaignResource);

        // TODO: test validations
    }
    
    /**
     * Delete a campaign template
     *
     * If cascade &#x3D; &#39;detach&#39;, it will force delete the template even if it&#39;s attached to other objects
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCampaignTemplateUsingDELETETest() throws ApiException {
        String id = null;
        String cascade = null;
        // api.deleteCampaignTemplateUsingDELETE(id, cascade);

        // TODO: test validations
    }
    
    /**
     * Delete a campaign
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCampaignUsingDELETETest() throws ApiException {
        Long id = null;
        // api.deleteCampaignUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * Get a single campaign template
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCampaignTemplateUsingGETTest() throws ApiException {
        String id = null;
        // TemplateResource response = api.getCampaignTemplateUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * List and search campaign templates
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCampaignTemplatesUsingGETTest() throws ApiException {
        Integer size = null;
        Integer page = null;
        String order = null;
        // PageResourceTemplateResource response = api.getCampaignTemplatesUsingGET(size, page, order);

        // TODO: test validations
    }
    
    /**
     * Returns a single campaign
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCampaignUsingGETTest() throws ApiException {
        Long id = null;
        // CampaignResource response = api.getCampaignUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * List and search campaigns
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCampaignsUsingGETTest() throws ApiException {
        Boolean filterActive = null;
        Integer size = null;
        Integer page = null;
        String order = null;
        // PageResourceCampaignResource response = api.getCampaignsUsingGET(filterActive, size, page, order);

        // TODO: test validations
    }
    
    /**
     * List the challenges associated with a campaign
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChallengesUsingGETTest() throws ApiException {
        Long id = null;
        // PageResourceChallengeResource response = api.getChallengesUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * Remove a challenge from a campaign
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeChallengeUsingDELETETest() throws ApiException {
        Long campaignId = null;
        Long id = null;
        // api.removeChallengeUsingDELETE(campaignId, id);

        // TODO: test validations
    }
    
    /**
     * Update an campaign template
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCampaignTemplateUsingPUTTest() throws ApiException {
        String id = null;
        TemplateResource campaignTemplateResource = null;
        // api.updateCampaignTemplateUsingPUT(id, campaignTemplateResource);

        // TODO: test validations
    }
    
    /**
     * Update a campaign
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCampaignUsingPUTTest() throws ApiException {
        Long id = null;
        CampaignResource campaignResource = null;
        // api.updateCampaignUsingPUT(id, campaignResource);

        // TODO: test validations
    }
    
}
