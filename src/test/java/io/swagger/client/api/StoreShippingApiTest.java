/*
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ItemTemplateResource;
import io.swagger.client.model.PageResourceItemTemplateResource;
import io.swagger.client.model.ShippingItem;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StoreShippingApi
 */
@Ignore
public class StoreShippingApiTest {

    private final StoreShippingApi api = new StoreShippingApi();

    
    /**
     * Create a shipping item
     *
     * A shipping item represents a shipping option and cost. SKUs have to be unique in the entire store.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createShippingItemUsingPOSTTest() throws ApiException {
        ShippingItem shippingItem = null;
        ShippingItem response = api.createShippingItemUsingPOST(shippingItem);

        // TODO: test validations
    }
    
    /**
     * Create a shipping template
     *
     * Shipping Templates define a type of shipping and the properties they have.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createShippingTemplateUsingPOSTTest() throws ApiException {
        ItemTemplateResource shippingTemplateResource = null;
        ItemTemplateResource response = api.createShippingTemplateUsingPOST(shippingTemplateResource);

        // TODO: test validations
    }
    
    /**
     * Delete a shipping item
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteShippingItemUsingDELETETest() throws ApiException {
        Integer id = null;
        api.deleteShippingItemUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * Delete a shipping template
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteShippingTemplateUsingDELETETest() throws ApiException {
        String id = null;
        String cascade = null;
        api.deleteShippingTemplateUsingDELETE(id, cascade);

        // TODO: test validations
    }
    
    /**
     * Get a single shipping item
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getShippingItemUsingGETTest() throws ApiException {
        Integer id = null;
        ShippingItem response = api.getShippingItemUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * Get a single shipping template
     *
     * Shipping Templates define a type of shipping and the properties they have.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getShippingTemplateUsingGETTest() throws ApiException {
        String id = null;
        ItemTemplateResource response = api.getShippingTemplateUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * List and search shipping templates
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getShippingTemplatesUsingGETTest() throws ApiException {
        Integer size = null;
        Integer page = null;
        String order = null;
        PageResourceItemTemplateResource response = api.getShippingTemplatesUsingGET(size, page, order);

        // TODO: test validations
    }
    
    /**
     * Update a shipping item
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateShippingItemUsingPUTTest() throws ApiException {
        Integer id = null;
        ShippingItem shippingItem = null;
        api.updateShippingItemUsingPUT(id, shippingItem);

        // TODO: test validations
    }
    
    /**
     * Update a shipping template
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateShippingTemplateUsingPUTTest() throws ApiException {
        String id = null;
        ItemTemplateResource shippingTemplateResource = null;
        api.updateShippingTemplateUsingPUT(id, shippingTemplateResource);

        // TODO: test validations
    }
    
}
