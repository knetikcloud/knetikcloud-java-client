/*
 * Knetik Platform API Documentation Latest
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.PageUserRelationshipResource;
import io.swagger.client.model.UserRelationshipResource;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersRelationshipsApi
 */
@Ignore
public class UsersRelationshipsApiTest {

    private final UsersRelationshipsApi api = new UsersRelationshipsApi();

    
    /**
     * Create a user relationship
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addRelationshipUsingPOSTTest() throws ApiException {
        UserRelationshipResource relationship = null;
        UserRelationshipResource response = api.addRelationshipUsingPOST(relationship);

        // TODO: test validations
    }
    
    /**
     * Delete a user relationship
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRelationshipUsingDELETETest() throws ApiException {
        Long id = null;
        api.deleteRelationshipUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * Get a user relationship
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRelationshipUsingGETTest() throws ApiException {
        Long id = null;
        UserRelationshipResource response = api.getRelationshipUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * Get a list of user relationships
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRelationshipsUsingGETTest() throws ApiException {
        PageUserRelationshipResource response = api.getRelationshipsUsingGET();

        // TODO: test validations
    }
    
    /**
     * Update a user relationship
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateRelationshipUsingPUTTest() throws ApiException {
        Long id = null;
        UserRelationshipResource relationship = null;
        UserRelationshipResource response = api.updateRelationshipUsingPUT(id, relationship);

        // TODO: test validations
    }
    
}
