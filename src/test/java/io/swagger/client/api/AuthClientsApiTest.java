/**
 * Knetik Platform API Documentation latest 
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ClientResource;
import io.swagger.client.model.PageClientResource;
import io.swagger.client.model.GrantTypeResource;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthClientsApi
 */
public class AuthClientsApiTest {

    private final AuthClientsApi api = new AuthClientsApi();

    
    /**
     * Set grant types for a client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void assignClientGrantTypesUsingPUTTest() throws ApiException {
        String clientKey = null;
        List<String> grantList = null;
        // api.assignClientGrantTypesUsingPUT(clientKey, grantList);

        // TODO: test validations
    }
    
    /**
     * Set redirect uris for a client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void assignClientRedirectUrisUsingPUTTest() throws ApiException {
        String clientKey = null;
        List<String> redirectList = null;
        // api.assignClientRedirectUrisUsingPUT(clientKey, redirectList);

        // TODO: test validations
    }
    
    /**
     * Create a new client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createClientUsingPOSTTest() throws ApiException {
        ClientResource clientResource = null;
        // ClientResource response = api.createClientUsingPOST(clientResource);

        // TODO: test validations
    }
    
    /**
     * Delete a client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteClientUsingDELETETest() throws ApiException {
        String clientKey = null;
        // api.deleteClientUsingDELETE(clientKey);

        // TODO: test validations
    }
    
    /**
     * Get a single client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getClientUsingGETTest() throws ApiException {
        String clientKey = null;
        // ClientResource response = api.getClientUsingGET(clientKey);

        // TODO: test validations
    }
    
    /**
     * List and search clients
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getClientsUsingGETTest() throws ApiException {
        Integer size = null;
        Integer page = null;
        String order = null;
        // PageClientResource response = api.getClientsUsingGET(size, page, order);

        // TODO: test validations
    }
    
    /**
     * List available client grant types
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAvailableGrantTypesUsingGETTest() throws ApiException {
        // List<GrantTypeResource> response = api.listAvailableGrantTypesUsingGET();

        // TODO: test validations
    }
    
    /**
     * Update a client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateClientUsingPUTTest() throws ApiException {
        String clientKey = null;
        ClientResource clientResource = null;
        // api.updateClientUsingPUT(clientKey, clientResource);

        // TODO: test validations
    }
    
}
