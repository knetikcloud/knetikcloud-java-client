/**
 * Knetik Platform API Documentation latest 
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.BreGlobalResource;
import io.swagger.client.model.PageBreGlobalResource;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BRERuleEngineGlobalsApi
 */
public class BRERuleEngineGlobalsApiTest {

    private final BRERuleEngineGlobalsApi api = new BRERuleEngineGlobalsApi();

    
    /**
     * Create a global definition
     *
     * Once created you can then use in a custom rule. Note that global definitions cannot be modified or deleted if in use.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createGlobalUsingPOSTTest() throws ApiException {
        BreGlobalResource breGlobalResource = null;
        // BreGlobalResource response = api.createGlobalUsingPOST(breGlobalResource);

        // TODO: test validations
    }
    
    /**
     * Delete a global
     *
     * May fail if there are existing rules against it. Cannot delete core globals
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteGlobalUsingDELETETest() throws ApiException {
        String id = null;
        // api.deleteGlobalUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * Get a single global definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGlobalUsingGETTest() throws ApiException {
        String id = null;
        // BreGlobalResource response = api.getGlobalUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * List global definitions
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGlobalsUsingGETTest() throws ApiException {
        Boolean filterSystem = null;
        Integer size = null;
        Integer page = null;
        // PageBreGlobalResource response = api.getGlobalsUsingGET(filterSystem, size, page);

        // TODO: test validations
    }
    
    /**
     * Update a global definition
     *
     * May fail if new parameters mismatch requirements of existing rules. Cannot update core globals
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateGlobalUsingPUTTest() throws ApiException {
        String id = null;
        BreGlobalResource breGlobalResource = null;
        // api.updateGlobalUsingPUT(id, breGlobalResource);

        // TODO: test validations
    }
    
}
