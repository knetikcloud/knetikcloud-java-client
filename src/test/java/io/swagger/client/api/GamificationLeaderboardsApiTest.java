/**
 * Knetik Platform API Documentation latest 
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.LeaderboardResource;
import io.swagger.client.model.LeaderboardEntryResource;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GamificationLeaderboardsApi
 */
public class GamificationLeaderboardsApiTest {

    private final GamificationLeaderboardsApi api = new GamificationLeaderboardsApi();

    
    /**
     * Retrieves leaderboard details and paginated entries
     *
     * The context type identifies the type of entity (i.e., &#39;activity&#39;) being tracked on the leaderboard. The context ID is the unique ID of the actual entity tracked by the leaderboard.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLeaderboardUsingGETTest() throws ApiException {
        String contextType = null;
        String contextId = null;
        Integer size = null;
        Integer page = null;
        // LeaderboardResource response = api.getLeaderboardUsingGET(contextType, contextId, size, page);

        // TODO: test validations
    }
    
    /**
     * Get a list of available leaderboard strategy names
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStrategiesUsingGETTest() throws ApiException {
        // List<String> response = api.getStrategiesUsingGET();

        // TODO: test validations
    }
    
    /**
     * Retrieves a specific user entry with rank
     *
     * The context type identifies the type of entity (i.e., &#39;activity&#39;) being tracked on the leaderboard. The context ID is the unique ID of the actual entity tracked by the leaderboard.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserRankUsingGETTest() throws ApiException {
        String contextType = null;
        String contextId = null;
        String id = null;
        // LeaderboardEntryResource response = api.getUserRankUsingGET(contextType, contextId, id);

        // TODO: test validations
    }
    
}
