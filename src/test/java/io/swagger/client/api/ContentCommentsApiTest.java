/**
 * Knetik Platform API Documentation latest 
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.CommentResource;
import io.swagger.client.model.PageCommentResource;
import io.swagger.client.model.CommentSearch;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContentCommentsApi
 */
public class ContentCommentsApiTest {

    private final ContentCommentsApi api = new ContentCommentsApi();

    
    /**
     * Add a new comment
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCommentUsingPOSTTest() throws ApiException {
        CommentResource commentResource = null;
        // CommentResource response = api.addCommentUsingPOST(commentResource);

        // TODO: test validations
    }
    
    /**
     * Delete a comment
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCommentUsingDELETETest() throws ApiException {
        Long id = null;
        // api.deleteCommentUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * Returns a comment by comment id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCommentUsingGETTest() throws ApiException {
        Long id = null;
        // CommentResource response = api.getCommentUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * Returns a page of comments
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCommentsUsingGETTest() throws ApiException {
        String context = null;
        Integer contextId = null;
        Integer size = null;
        Integer page = null;
        // PageCommentResource response = api.getCommentsUsingGET(context, contextId, size, page);

        // TODO: test validations
    }
    
    /**
     * Search the comment index
     *
     * The body is an ElasticSearch query json. Please see their &lt;a href&#x3D;&#39;https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html&#39;&gt;documentation&lt;/a&gt; for details on the format and search options
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchCommentsUsingPOSTTest() throws ApiException {
        Object query = null;
        Integer size = null;
        Integer page = null;
        // CommentSearch response = api.searchCommentsUsingPOST(query, size, page);

        // TODO: test validations
    }
    
    /**
     * Update comment content
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCommentUsingPUTTest() throws ApiException {
        Long id = null;
        String content = null;
        // api.updateCommentUsingPUT(id, content);

        // TODO: test validations
    }
    
}
