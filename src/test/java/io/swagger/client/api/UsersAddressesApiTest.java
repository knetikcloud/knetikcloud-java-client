/*
 * Knetik Platform API Documentation Latest
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.PageSavedAddressResource;
import io.swagger.client.model.SavedAddressResource;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersAddressesApi
 */
@Ignore
public class UsersAddressesApiTest {

    private final UsersAddressesApi api = new UsersAddressesApi();

    
    /**
     * Save a new address
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAddressUsingPOSTTest() throws ApiException {
        String userId = null;
        SavedAddressResource savedAddressResource = null;
        SavedAddressResource response = api.createAddressUsingPOST(userId, savedAddressResource);

        // TODO: test validations
    }
    
    /**
     * Delete an address
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAddressUsingDELETETest() throws ApiException {
        String userId = null;
        Integer id = null;
        api.deleteAddressUsingDELETE(userId, id);

        // TODO: test validations
    }
    
    /**
     * Get a single address
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAddressUsingGETTest() throws ApiException {
        String userId = null;
        Integer id = null;
        SavedAddressResource response = api.getAddressUsingGET(userId, id);

        // TODO: test validations
    }
    
    /**
     * List and search addresses
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAddressesUsingGETTest() throws ApiException {
        String userId = null;
        Integer size = null;
        Integer page = null;
        String order = null;
        PageSavedAddressResource response = api.getAddressesUsingGET(userId, size, page, order);

        // TODO: test validations
    }
    
    /**
     * Update an address
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAddressUsingPUTTest() throws ApiException {
        String userId = null;
        Integer id = null;
        SavedAddressResource savedAddressResource = null;
        api.updateAddressUsingPUT(userId, id, savedAddressResource);

        // TODO: test validations
    }
    
}
