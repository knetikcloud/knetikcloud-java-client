/**
 * Knetik Platform API Documentation latest 
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.PageUsageInfo;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReportingUsageApi
 */
public class ReportingUsageApiTest {

    private final ReportingUsageApi api = new ReportingUsageApi();

    
    /**
     * Returns aggregated endpoint usage information by the day
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsageByDayUsingGETTest() throws ApiException {
        Long startDate = null;
        Long endDate = null;
        Boolean combineEndpoints = null;
        Integer size = null;
        Integer page = null;
        // PageUsageInfo response = api.getUsageByDayUsingGET(startDate, endDate, combineEndpoints, size, page);

        // TODO: test validations
    }
    
    /**
     * Returns aggregated endpoint usage information by hour
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsageByHourUsingGETTest() throws ApiException {
        Long startDate = null;
        Long endDate = null;
        Boolean combineEndpoints = null;
        Integer size = null;
        Integer page = null;
        // PageUsageInfo response = api.getUsageByHourUsingGET(startDate, endDate, combineEndpoints, size, page);

        // TODO: test validations
    }
    
    /**
     * Returns aggregated endpoint usage information by minute
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsageByMinuteUsingGETTest() throws ApiException {
        Long startDate = null;
        Long endDate = null;
        Boolean combineEndpoints = null;
        Integer size = null;
        Integer page = null;
        // PageUsageInfo response = api.getUsageByMinuteUsingGET(startDate, endDate, combineEndpoints, size, page);

        // TODO: test validations
    }
    
    /**
     * Returns aggregated endpoint usage information by month
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsageByMonthUsingGETTest() throws ApiException {
        Long startDate = null;
        Long endDate = null;
        Boolean combineEndpoints = null;
        Integer size = null;
        Integer page = null;
        // PageUsageInfo response = api.getUsageByMonthUsingGET(startDate, endDate, combineEndpoints, size, page);

        // TODO: test validations
    }
    
    /**
     * Returns aggregated endpoint usage information by year
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsageByYearUsingGETTest() throws ApiException {
        Long startDate = null;
        Long endDate = null;
        Boolean combineEndpoints = null;
        Integer size = null;
        Integer page = null;
        // PageUsageInfo response = api.getUsageByYearUsingGET(startDate, endDate, combineEndpoints, size, page);

        // TODO: test validations
    }
    
}
