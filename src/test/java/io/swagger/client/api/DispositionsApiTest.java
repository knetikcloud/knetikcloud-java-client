/*
 * Knetik Platform API Documentation Latest
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.DispositionCount;
import io.swagger.client.model.DispositionResource;
import io.swagger.client.model.PageResourceDispositionResource;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DispositionsApi
 */
@Ignore
public class DispositionsApiTest {

    private final DispositionsApi api = new DispositionsApi();

    
    /**
     * Add a new disposition. 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addDispositionUsingPOSTTest() throws ApiException {
        DispositionResource disposition = null;
        DispositionResource response = api.addDispositionUsingPOST(disposition);

        // TODO: test validations
    }
    
    /**
     * Delete a disposition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDispositionUsingDELETETest() throws ApiException {
        Long id = null;
        api.deleteDispositionUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * Returns a list of disposition counts
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDispositionCountUsingGETTest() throws ApiException {
        String filterContext = null;
        String filterOwner = null;
        List<DispositionCount> response = api.getDispositionCountUsingGET(filterContext, filterOwner);

        // TODO: test validations
    }
    
    /**
     * Returns a disposition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDispositionUsingGETTest() throws ApiException {
        Long id = null;
        DispositionResource response = api.getDispositionUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * Returns a page of dispositions
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDispositionsUsingGETTest() throws ApiException {
        String filterContext = null;
        String filterOwner = null;
        Integer size = null;
        Integer page = null;
        String order = null;
        PageResourceDispositionResource response = api.getDispositionsUsingGET(filterContext, filterOwner, size, page, order);

        // TODO: test validations
    }
    
}
