/*
 * Knetik Platform API Documentation Latest
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ArticleResource;
import io.swagger.client.model.PageArticleResource;
import io.swagger.client.model.PageTemplateResource;
import io.swagger.client.model.TemplateResource;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContentArticlesApi
 */
@Ignore
public class ContentArticlesApiTest {

    private final ContentArticlesApi api = new ContentArticlesApi();

    
    /**
     * Create an article template
     *
     * Article Templates define a type of article and the properties they have
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createArticleTemplateUsingPOSTTest() throws ApiException {
        TemplateResource articleTemplateResource = null;
        TemplateResource response = api.createArticleTemplateUsingPOST(articleTemplateResource);

        // TODO: test validations
    }
    
    /**
     * Create a new article
     *
     * Articles are blobs of text with titles, a category and assets. Formatting and display of the text is in the hands of the front end.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createArticleUsingPOSTTest() throws ApiException {
        ArticleResource articleResource = null;
        ArticleResource response = api.createArticleUsingPOST(articleResource);

        // TODO: test validations
    }
    
    /**
     * Delete an article template
     *
     * If cascade &#x3D; &#39;detach&#39;, it will force delete the template even if it&#39;s attached to other objects
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteArticleTemplateUsingDELETETest() throws ApiException {
        String id = null;
        String cascade = null;
        api.deleteArticleTemplateUsingDELETE(id, cascade);

        // TODO: test validations
    }
    
    /**
     * Delete an existing article
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteArticleUsingDELETETest() throws ApiException {
        String id = null;
        api.deleteArticleUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * Get a single article template
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getArticleTemplateUsingGETTest() throws ApiException {
        String id = null;
        TemplateResource response = api.getArticleTemplateUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * List and search article templates
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getArticleTemplatesUsingGETTest() throws ApiException {
        Integer size = null;
        Integer page = null;
        String order = null;
        PageTemplateResource response = api.getArticleTemplatesUsingGET(size, page, order);

        // TODO: test validations
    }
    
    /**
     * Get a single article
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getArticleUsingGETTest() throws ApiException {
        String id = null;
        ArticleResource response = api.getArticleUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * List and search articles
     *
     * Get a list of articles with optional filtering. Assets will not be filled in on the resources returned. Use &#39;Get a single article&#39; to retrieve the full resource with assets for a given item as needed.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getArticlesUsingGETTest() throws ApiException {
        String filterCategory = null;
        String filterTagset = null;
        String filterTitle = null;
        Integer size = null;
        Integer page = null;
        String order = null;
        PageArticleResource response = api.getArticlesUsingGET(filterCategory, filterTagset, filterTitle, size, page, order);

        // TODO: test validations
    }
    
    /**
     * Update an article template
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateArticleTemplateUsingPUTTest() throws ApiException {
        String id = null;
        TemplateResource articleTemplateResource = null;
        api.updateArticleTemplateUsingPUT(id, articleTemplateResource);

        // TODO: test validations
    }
    
    /**
     * Update an existing article
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateArticleUsingPUTTest() throws ApiException {
        String id = null;
        ArticleResource articleResource = null;
        api.updateArticleUsingPUT(id, articleResource);

        // TODO: test validations
    }
    
}
